"""Test training module"""

import pandas as pd

import train


def test_prepare_dataset():
    """Test prepare_dataset function"""
    df = pd.DataFrame([['hash-1', 1, 1, 1], ['hash-2', 0, 1, 0], ['hash-3', 1, 0, 0], ['hash-4', 0, 0, 1]])

    df.columns = ['hash', 'feature-1', 'feature-2', 'malware']

    X, y = train.prepare_dataset(df)

    expected_X = pd.DataFrame([[1, 1], [0, 1], [1, 0], [0, 0]])

    expected_X.columns = ['feature-1', 'feature-2']
    assert X.to_dict() == expected_X.to_dict()

    expected_y = [1, 0, 0, 1]
    assert y.tolist() == expected_y


def test_reduce_features_by_correlation():
    """Test prepare_dataset function"""
    X = pd.DataFrame(
        [
            [1, 1, 1, 1],
            [0, 0, 1, 0],
            [1, 1, 0, 1],
            [0, 0, 0, 0],
            [1, 0, 0, 1],
            [0, 0, 0, 0],
            [1, 0, 0, 1],
            [0, 1, 1, 0],
            [1, 0, 1, 1],
            [0, 1, 0, 0],
            [1, 0, 0, 1],
            [0, 0, 0, 0],
            [1, 0, 0, 1],
            [0, 0, 0, 0],
        ],
        columns=['feature-1', 'feature-2', 'feature-3', 'feature-4'],
    )

    reduced_X = train.reduce_features_by_correlation(X, 0.95)

    expected_X = pd.DataFrame(
        [
            [1, 1, 1],
            [0, 0, 1],
            [1, 1, 0],
            [0, 0, 0],
            [1, 0, 0],
            [0, 0, 0],
            [1, 0, 0],
            [0, 1, 1],
            [1, 0, 1],
            [0, 1, 0],
            [1, 0, 0],
            [0, 0, 0],
            [1, 0, 0],
            [0, 0, 0],
        ],
        columns=['feature-1', 'feature-2', 'feature-3'],
    )
    assert reduced_X.to_dict() == expected_X.to_dict()


def test_reduce_features_by_mutual_information():
    """Test reduce_features_by_mutual_information function"""
    X = pd.DataFrame(
        [
            [1, 1, 1, 1],
            [0, 0, 1, 0],
            [1, 1, 0, 1],
            [0, 0, 0, 0],
            [1, 0, 0, 1],
            [0, 0, 0, 0],
            [1, 0, 0, 1],
            [0, 1, 1, 0],
            [1, 0, 1, 1],
            [0, 1, 0, 0],
            [1, 0, 0, 1],
            [0, 0, 0, 0],
            [1, 0, 0, 1],
            [0, 0, 0, 0],
        ],
        columns=['feature-1', 'feature-2', 'feature-3', 'feature-4'],
    )

    y = [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0]

    reduced_X = train.reduce_features_by_mutual_information(X, y, 2)

    expected_X = pd.DataFrame(
        [
            [1, 1],
            [0, 0],
            [1, 1],
            [0, 0],
            [1, 1],
            [0, 0],
            [1, 1],
            [0, 0],
            [1, 1],
            [0, 0],
            [1, 1],
            [0, 0],
            [1, 1],
            [0, 0],
        ],
        columns=['feature-1', 'feature-4'],
    )
    assert reduced_X.to_dict() == expected_X.to_dict()
